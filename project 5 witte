////Brian Witte
////Project five for the final
////BAM, CST Mon 6-9

////GROUND////
float horizon;
////HEIGHT RANGE////
float hmin, hmax;
//float q=(hmax-hmin)/2;
////WEIGHT RANGE////
float wmin, wmax;
//float r=(wmax-wmin)/2;
////Number of people generated by our array for the sameple size.  
int many= 10;
int a=many;
Person[] people = new Person[many];
String[] names = {"Anita", "Cathy", "Chad", "Dan", "David", "Elizabeth", "Enrique", 
"Erona", "Gordon", "Greg", "Jennifer", "Jill", "Kathy", "Kim", "Kirk", "Mark", 
"Melissa", "Mina", "Mitch", "Narie", "Sabita", "Roberta", "Ryan", "Scott"};
/*int z[]= {"Anita", "Cathy", "Chad", "Dan", "David", "Elizabeth", "Enrique", 
"Erona", "Gordon", "Greg", "Jennifer", "Jill", "Kathy", "Kim", "Kirk", "Mark", 
"Melissa", "Mina", "Mitch", "Narie", "Sabita", "Roberta", "Ryan", "Scott"};
*/
void setup(){
  
  size(1000,400);
  
  horizon = height/1.5;
  
  ////The people's sizes are bound to constraints to keep it more realistic.  
  hmin = 48;      
  hmax = 90;      
  wmin = 40;       
  wmax = 60;
  ////Initializing our test subjects
  for(int n = 0; n < many; n++){
    people[n] = new Person();    
    people[n].startup();
  }
  ////Place all of the random people
  for(int n = 0; n < many; n++){ 
    people[n].x = 90 + (n * 90);    
  }
}
  
void draw(){
  scene();
  show();
  stats();
  messages();
  //clouds();
}

////The function stats allows us to generate each indivuiduals height and weight (their statistics) 
void stats(){
  hMean();
  wMean();
}

void wMean(){
  float average = 0;
  for(int n=0; n<many; n++){
    average += people[n].weight;
  }
  average = int(average/a);
  text("Mean Weight: " + average + "lbs", (width/2)-50, (horizon *(3/2)) + 120);
}

void hMean(){
  int feet, inches;
  float average = 0;
  for(int n = 0; n < a; n++){
    average += people[n].h;
  }
  
  //Find the mean height
  average = (average / a);
  //take the individual's height and divide by 12 to get how many feet tall they are.
  feet = int(average/12);
  //the %12 lets us take the leftovers from whenever the last time that 12 went into the quotient. this gives us the inch value.
  inches = int(average%12);
  text("Mean Height: " + feet + "'" + inches + "''", (width/2)-50, (horizon *(3/2))+110);
}

void scene(){  
  noStroke();
  ////Sky
  rectMode(CORNER);
  fill(150, 200, 250);              
  rect(0,0, width, horizon);
  
  ////Ground or grass
  fill(0,255,0);
  rect(0,horizon,width,height);    
}
////DISPLAYING people////
void show(){
  for(int n = 0; n < a; n++){       
    people[n].placement();
    people[n].show();
  }
}

void keyPressed(){
  if (key == 'r'){
    for(int n = 0; n < many; n++){
      people[n].startup();
    }
  }
  else if (key=='t') tallest(z, many);
  else if (key=='w') widest(z, many);
}

void tallest( int a[], int m) {
  ////place the largest number at the end of the array
  ////swap the rest of the elements in the array to accomodate the bump to the end
  int w=0;
  for (int n=1; n<m; n++) {
    if (a[n]>a[w]) w=n;
  }
  int tmp;
  tmp=a[m-1];              
  a[m-1]=a[w];             
  a[w]=tmp;
}
void widest( int a[], int m) {
  ////just like big, we find the fattest and we can swap all the numbers accordingly
  int w=0;
  for (int n=1; n<m; n++) {
    if (a[n]>a[w]) w=n;
  }
  ////make a temp and swap them///
  int tmp;
  tmp=a[m-1];              
  a[m-1]=a[w];             
  a[w]=tmp;  
}
void big( int a[], int m) {
  ////place the largest number at the end of the array
  ////swap the rest of the elements in the array to accomodate the bump to the end
  int w=0;
  for (int j=1; j<m; j++) {
    if (a[j]>a[w]) w=j;
  }
  int tmp;
  tmp=a[m-1];              
  a[m-1]=a[w];             
  a[w]=tmp;
}
void messages(){
 textSize(10);
 text("Project 5: Precursor to the final", 25,25);
 textSize(10);
 text("AUTHOR: Brian Witte", 20, 50);
}


class Person{
  
  float r,g,b;     //colors
  float w1, w2;    //Randomize each width
  float h1, h2;    //Randomize each height
  float w,h;       //width and height
  float x,y;       //x and y position
  
  int feet, inches;
  int weight;
  ////Take a name from the random sample of names given. 
  String name;
  
  void startup(){
    r = random(0,255);          
    g = random(0,255);
    b = random(0,255);
    w1 = random(wmin/2,wmax/2);    
    w2 = random(wmin/2,wmax/2);    
    ////the more Mean values we use in our results, will likely cause there to be less outliers and more closely applicable to real life
    h1 = random(hmin/2,hmax/2);    
    h2 = random(hmin/2,hmax/2);
    
    w = w1 + w2;  
    h = h1 + h2;
    
    name = names[int(random(0,names.length))];
  }
  
  void placement(){
    y = horizon - (h/2);  //feet stay on the ground (horizon) because the center of the body starts at horizon-.5*height)
  }
  
  void body(){
    noStroke();
    ////This will call upon the constructor to make their RGB values random each time.
    fill(r,g,b);
    rectMode(CENTER);
    //Body of person
    rect(x,y,w,h);
    ////A simple line to give the profile of the legs. This will scale with the height as well.
    stroke(0);
    line(x, h+180, x, horizon);
    //Head with a mouth and eyes
    ellipse(x, (y - (h/2) - (h/6)), w, h/3);  
    
    fill(0);
    rect(x, (y - (h/2) - (h/6)), w/5, h/6);  
    ellipse(x - w/4, (y - (h/2) - (h/4)), w/5, w/8);        
    ellipse(x + w/4, (y - (h/2) - (h/4)), w/8, w/5);
  }
  
  void show(){
    body();                 //The shape of the person
    stats();                //Persons unique traits
    messages();             //Displaying the important stuff, what makes each of them different
  }
  
  void stats(){ 
    ////Height/12= feet
    feet = int((h/12)); 
    ////The leftovers from the feet are then presented as inches
    inches = int(h % 12);
    
    weight = int(((2 * h) * w)/40);  
  }
  
  void messages(){
    textSize(10);
    text(name, x - w/2, y + h/2 + 25);
    text(feet + "'" + inches + "''",x - w/2, y + h/2 + 35);
    text(weight + "lbs", x- w/2,  y + h/2 + 45);
  }
}
